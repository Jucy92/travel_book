plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'travel_book'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // RESTful API 중 okHttp라는 라이브러리 사용하기 위해 추가
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'

    // JSONObject 사용하기 위해 추가 -> 직접 꺼내서 사용 (PerplexityApiService 참고)
    implementation 'org.json:json:20210307'
    //JSONObject 사용하기 위해서 추가 -> 매퍼 만들어서 사용 (WeatherService 참고)
    //implementation 'com.fasterxml.jackson.core:jackson-databind'

    //JdbcTemplate 추가
    //implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    //MyBatis 추가	-> 스프링 부트에 맞게 추가해줘야함
    //implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
    //MyBatis 스프링 부트 3.0 추가
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    implementation 'org.jetbrains:annotations:23.0.0'

    //JPA, 스프링 데이터 JPA 추가		=> 여기에 jdbc에 관한걸 포함하고 있어서 지워도 된다
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //Querydsl 추가 스프링 부트 3.xx 버전
    //implementation 'com.querydsl:querydsl-jpa'
    //annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    //annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    //annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // annotationProcessor들은 => JPA Entity를 읽어서 QEntity로 만들어주기 위한 처리기들이라고 이해하면 됨


    //H2 데이터베이스 추가
    runtimeOnly 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'


    //테스트에서 lombok 사용하기 위해 추가
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // 스크래핑을 해보기 위해서 라이브러리 다운 -> jsoup HTML parser library @ <https://jsoup.org/>
    implementation 'org.jsoup:jsoup:1.15.3'

}

tasks.named('test') {
    useJUnitPlatform()
}

//Querydsl 추가, 자동 생성된 Q클래스 gradle clean으로 제거
clean {
    delete file('src/main/generated')	// -> inteliJ 빌드 시 생성된 Q 클래스 제거해주는 설정
}

