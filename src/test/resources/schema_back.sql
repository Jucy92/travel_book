-- 백업이 아니라 이걸로 변경해야함
-- 1. MEMBER 테이블 (user_id 컬럼 추가)
CREATE TABLE MEMBER (
    member_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- 회원 ID (자동 생성, 기본 키)
    user_id VARCHAR(255) UNIQUE NOT NULL,                      -- 사용자 아이디 (UNIQUE, NOT NULL)
    user_name VARCHAR(255) UNIQUE NOT NULL,                      -- 사용자 이름 (UNIQUE, NOT NULL)
    password VARCHAR(255) NOT NULL,                             -- 비밀번호 (NOT NULL)
    email VARCHAR(255) UNIQUE NOT NULL,                         -- 이메일 (UNIQUE, NOT NULL)
    nick_name VARCHAR(255),                                      -- 닉네임 (NULL 허용)
    profile_image_path VARCHAR(255),                            -- 프로필 이미지 저장 경로 (NULL 허용)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,              -- 계정 생성 일시 (기본값: 현재 타임스탬프)
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP               -- 계정 수정 일시 (기본값: 현재 타임스탬프)
);
CREATE INDEX idx_member_user_id ON MEMBER (user_id); -- user_id로 검색하는 경우를 위해 인덱스 추가

-- 2. FRIENDSHIP 테이블
CREATE TABLE FRIENDSHIP (
    friendship_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- 친구 관계 ID (자동 생성, 기본 키)
    member_id1 BIGINT NOT NULL,                                   -- 친구 요청을 보낸 회원 ID (외래 키, NOT NULL)
    member_id2 BIGINT NOT NULL,                                   -- 친구 요청을 받은 회원 ID (외래 키, NOT NULL)
    status VARCHAR(50) DEFAULT 'PENDING',                         -- 친구 관계 상태 (PENDING, ACCEPTED, REJECTED 등, 기본값: PENDING)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,              -- 친구 요청 생성 일시 (기본값: 현재 타임스탬프)
    FOREIGN KEY (member_id1) REFERENCES MEMBER(member_id),
    FOREIGN KEY (member_id2) REFERENCES MEMBER(member_id),
    UNIQUE (member_id1, member_id2)                              -- 중복된 친구 관계 방지
);

-- 3. TRAVEL 테이블
CREATE TABLE TRAVEL (
    travel_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- 여행 ID (자동 생성, 기본 키)
    member_id BIGINT NOT NULL,                                   -- 여행 계획을 작성한 회원 ID (외래 키, NOT NULL)
    title VARCHAR(255) NOT NULL,                                 -- 여행 계획 제목 (NOT NULL)
    start_date DATE,                                             -- 여행 시작 날짜 (NULL 허용)
    end_date DATE,                                               -- 여행 종료 날짜 (NULL 허용)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,              -- 여행 계획 생성 일시 (기본값: 현재 타임스탬프)
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP               -- 여행 계획 수정 일시 (기본값: 현재 타임스탬프)
);
ALTER TABLE TRAVEL ADD CONSTRAINT fk_travel_member_id FOREIGN KEY (member_id) REFERENCES MEMBER(member_id);
CREATE INDEX idx_travel_member_id ON TRAVEL (member_id);

-- 4. LOCATION 테이블
CREATE TABLE LOCATION (
    location_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- 장소 ID (자동 생성, 기본 키)
    name VARCHAR(255) NOT NULL,                                 -- 장소 이름 (NOT NULL)
    address VARCHAR(255),                                        -- 주소 (NULL 허용)
    latitude DOUBLE,                                                 -- 위도 (NULL 허용)
    longitude DOUBLE,                                                -- 경도 (NULL 허용)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,              -- 장소 정보 생성 일시 (기본값: 현재 타임스탬프)
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP               -- 장소 정보 수정 일시 (기본값: 현재 타임스탬프)
);

-- 5. LOCATION_DETAIL 테이블
CREATE TABLE LOCATION_DETAIL (
    location_detail_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- 여행 계획 상세 정보 ID (자동 생성, 기본 키)
    travel_id BIGINT NOT NULL,                                   -- 해당 상세 정보가 속한 여행 ID (외래 키, NOT NULL)
    location_id BIGINT NOT NULL,                                   -- 해당 상세 정보의 장소 ID (외래 키, NOT NULL)
    order_num INTEGER,                                                -- 여행 계획 내 순서 (NULL 허용)
    memo VARCHAR(4000),                                          -- 해당 장소에 대한 메모 (NULL 허용)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,              -- 상세 정보 생성 일시 (기본값: 현재 타임스탬프)
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP               -- 상세 정보 수정 일시 (기본값: 현재 타임스탬프)
);
ALTER TABLE LOCATION_DETAIL ADD CONSTRAINT fk_location_detail_travel_id FOREIGN KEY (travel_id) REFERENCES TRAVEL(travel_id);
ALTER TABLE LOCATION_DETAIL ADD CONSTRAINT fk_location_detail_location_id FOREIGN KEY (location_id) REFERENCES LOCATION(location_id);
CREATE INDEX idx_location_detail_travel_id ON LOCATION_DETAIL (travel_id);
CREATE INDEX idx_location_detail_location_id ON LOCATION_DETAIL (location_id);

-- 6. POSTS 테이블
CREATE TABLE POSTS (
    post_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- 게시글 ID (자동 생성, 기본 키)
    member_id BIGINT NOT NULL,                                   -- 게시글을 작성한 회원 ID (외래 키, NOT NULL)
    content VARCHAR(4000),                                      -- 게시글 내용 (NULL 허용)
    travel_id BIGINT,                                            -- 해당 게시글과 관련된 여행 ID (외래 키, NULL 허용)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,              -- 생성 일시 (기본값: 현재 타임스탬프)
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP               -- 수정 일시 (기본값: 현재 타임스탬프)
);
ALTER TABLE POSTS ADD CONSTRAINT fk_posts_member_id FOREIGN KEY (member_id) REFERENCES MEMBER(member_id);
ALTER TABLE POSTS ADD CONSTRAINT fk_posts_travel_id FOREIGN KEY (travel_id) REFERENCES TRAVEL(travel_id);
CREATE INDEX idx_posts_member_id ON POSTS (member_id);
CREATE INDEX idx_posts_travel_id ON POSTS (travel_id);

-- 7. POST_IMAGES 테이블
CREATE TABLE POST_IMAGES (
    post_image_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- 게시글 이미지 ID (자동 생성, 기본 키)
    post_id BIGINT NOT NULL,                                          -- 해당 이미지가 속한 게시글 ID (외래 키, NOT NULL)
    file_name VARCHAR(255) NOT NULL,                               -- 파일 이름 (NOT NULL)
    file_path VARCHAR(255) NOT NULL,                               -- 파일 저장 경로 (NOT NULL)
    file_size BIGINT,                                              -- 파일 크기 (NULL 허용)
    mime_type VARCHAR(100),                                         -- 파일 MIME 타입 (NULL 허용)
    is_main BOOLEAN DEFAULT FALSE,                                   -- 해당 이미지가 게시글의 대표 이미지인지 여부 (기본값: FALSE)
    image_order INTEGER,                                              -- 게시글 내 이미지 순서 (NULL 허용)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                   -- 생성 일시 (기본값: 현재 타임스탬프)
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP                    -- 수정 일시 (기본값: 현재 타임스탬프)
);
ALTER TABLE POST_IMAGES ADD CONSTRAINT fk_post_images_post_id FOREIGN KEY (post_id) REFERENCES POSTS(post_id);
CREATE INDEX idx_post_images_post_id ON POST_IMAGES (post_id);

-- 8. TRAVEL_FILE 테이블 (location_id 컬럼 추가)
DROP TABLE IF EXISTS TRAVEL_FILE CASCADE;
CREATE TABLE TRAVEL_FILE (
    travel_file_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- 여행 파일 ID (자동 생성, 기본 키)
    travel_id BIGINT NOT NULL,                                   -- 해당 파일이 속한 여행 ID (외래 키, NOT NULL)
    location_id BIGINT NOT NULL,                                   -- 해당 파일이 속한 장소 ID (외래 키, NOT NULL)
    location_detail_id BIGINT NOT NULL,                               -- 해당 파일이 속한 여행 계획 상세 정보 ID (외래 키, NOT NULL)
    original_file_name VARCHAR(255) ,                              -- 파일 이름 (NOT NULL)
    file_name VARCHAR(255) NOT NULL,                               -- 파일 이름 (NOT NULL)
    file_path VARCHAR(255) NOT NULL,                               -- 파일 저장 경로 (NOT NULL)
    file_size BIGINT,                                              -- 파일 크기 (NULL 허용)
    mime_type VARCHAR(100),                                         -- 파일 MIME 타입 (NULL 허용)
    description VARCHAR(255),                                         -- 파일에 대한 설명 (NULL 허용)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,                   -- 생성 일시 (기본값: 현재 타임스탬프)
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP                    -- 수정 일시 (기본값: 현재 타임스탬프)
);
ALTER TABLE TRAVEL_FILE ADD CONSTRAINT fk_travel_file_travel_id FOREIGN KEY (travel_id) REFERENCES TRAVEL(travel_id);
ALTER TABLE TRAVEL_FILE ADD CONSTRAINT fk_travel_file_location_id FOREIGN KEY (location_id) REFERENCES LOCATION(location_id);
ALTER TABLE TRAVEL_FILE ADD CONSTRAINT fk_travel_file_location_detail_id FOREIGN KEY (location_detail_id) REFERENCES LOCATION_DETAIL(location_detail_id);
CREATE INDEX idx_travel_file_travel_location_detail ON TRAVEL_FILE (travel_id, location_id, location_detail_id);

-- 9. MODIFY_TABLE
CREATE TABLE MODIFY_TABLE (
    modify_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- 수정 기록 ID (자동 생성, 기본 키)
    table_name VARCHAR(255) NOT NULL,                             -- 수정된 테이블 이름 (NOT NULL)
    record_id BIGINT NOT NULL,                                   -- 수정된 레코드 ID (NOT NULL)
    modified_by BIGINT,                                          -- 수정한 회원 ID (외래 키, NULL 허용)
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,              -- 수정 일시 (기본값: 현재 타임스탬프)
    old_value TEXT,                                                -- 이전 값 (NULL 허용)
    new_value TEXT,                                                -- 새로운 값 (NULL 허용)
    FOREIGN KEY (modified_by) REFERENCES MEMBER(member_id)
);
CREATE INDEX idx_modify_table_record ON MODIFY_TABLE (table_name, record_id);